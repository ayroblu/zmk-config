/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

/ {
        behaviors {
                hm: homerow_mods {
                        compatible = "zmk,behavior-hold-tap";
                        label = "HOMEROW_MODS";
                        #binding-cells = <2>;
                        tapping-term-ms = <150>;
                        quick_tap_ms = <0>;
                        flavor = "tap-preferred";
                        bindings = <&kp>, <&kp>;
                };
        };
        keymap {
                compatible = "zmk,keymap";
   // bluetooth layer
   // &none &none &none &none &none &none   &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4

// ZMK JSON START
                layer_0 {
                        bindings = <
      &kp TAB &kp F &kp D &kp N &kp I &kp G  &none &none &none &none &none &none
   &kp ESCAPE &kp S &kp T &kp H &kp E &kp O  &none &none &none &none &none &none
    &kp ENTER &kp C &kp W &kp R &kp A &kp U  &none &none &none &none &none &none
                &sk LGUI &mo 5 &kp KC_SPC  &none &none &none
                        >;
                };
//                 layer_1 {
//                         bindings = <
//    &kp DELETE &kp J &kp K &kp M &kp SLASH &kp MINUS  &none &none &none &none &none &none
//    &kp SINGLE_QUOTE &kp Y &kp P &kp L &kp DOT &kp Q  &none &none &none &none &none &none
//         &kp ENTER &kp X &kp B &kp V &kp COMMA &kp Z  &none &none &none &none &none &none
//                            &sk LGUI &mo 5 &kp SPACE  &none &none &none
//                         >;
//                 };
//                 layer_2 {
//                         bindings = <
//                                  &sk LALT &kp EXCLAMATION &kp AT &kp HASH &kp DOLLAR &kp PERCENT  &none &none &none &none &none &none
//        &sk LCTRL &kp LEFT_BRACE &kp RIGHT_BRACE &kp LEFT_BRACKET &kp RIGHT_BRACKET &kp BACKSLASH  &none &none &none &none &none &none
//    &sk LSHIFT &kp LESS_THAN &kp GREATER_THAN &kp LEFT_PARENTHESIS &kp RIGHT_PARENTHESIS &kp PIPE  &none &none &none &none &none &none
//                                                                         &sk LGUI &mo 5 &kp SPACE  &none &none &none
//                         >;
//                 };
//                 layer_3 {
//                         bindings = <
//         &sk LALT &kp SLASH &kp N7 &kp N8 &kp N9 &kp PLUS  &none &none &none &none &none &none
//    &sk LCTRL &kp ASTERISK &kp N4 &kp N5 &kp N6 &kp EQUAL  &none &none &none &none &none &none
//         &sk LSHIFT &kp N0 &kp N1 &kp N2 &kp N3 &kp MINUS  &none &none &none &none &none &none
//                                 &sk LGUI &mo 5 &kp SPACE  &none &none &none
//                         >;
//                 };
//                 layer_4 {
//                         bindings = <
//      &sk LALT &kp CARET &kp AMPERSAND &kp UP &none &none  &none &none &none &none &none &none
//    &sk LCTRL &kp GRAVE &kp LEFT &kp DOWN &kp RIGHT &none  &none &none &none &none &none &none
//    &sk LSHIFT &kp TILDE &kp UNDERSCORE &none &none &none  &none &none &none &none &none &none
//                                 &sk LGUI &mo 5 &kp SPACE  &none &none &none
//                         >;
//                 };
//                 layer_5 {
//                         bindings = <
//                         &none &none &none &none &none &none  &none &none &none &none &none &none
//                     &none &to 4 &to 2 &to 1 &to 0 &sk LCTRL  &none &none &none &none &none &none
//    &none &to 3 &sk LALT &sk LSHIFT &kp BACKSPACE &kp DELETE  &none &none &none &none &none &none
//                                           &none &none &none  &none &none &none
//                         >;
//                 };
// ZMK JSON END
        };
};
